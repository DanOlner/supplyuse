{
    "contents" : "#Who consumes the most water?\nlibrary(ggplot2)\nlibrary(reshape2)\n\n#Load IO data\n#Stop it from checking variable names - this keeps the X's at bay\nflows <- read.csv(\"domesticUse2010ownMatrix_removingImputedRent_SICcodesInHeaderOnly.csv\", \n                  check.names=FALSE)\n\n#subset heavy\nsn = 58\nflows <- flows[1:sn,1:sn]\n\nnames <- read.csv(\"domesticUse2010_shortSICnames.csv\")\nnames <- names[1:sn,]\n#refactor short names to the order they're in, not auto-alphabetic\nnames$shortname <- reorder(names$shortname, seq(1:sn))\n\n\npercProcess <- function(flows, rowNum, name) {\n  #colSums(flows) is total consumption of that sector\n  val <- (flows[rowNum,]/colSums(flows)) * 100\n  #Or absolute... \n  # val <- (flows[rowNum,])\n  val <- melt(val, variable.name=\"SIC\", value.name=name)\n  return(val)\n}\n\n\n#Find out land transport costs used by each sector as a % of its total consumption\n#Land transport services are 49.3-5\n#We don't have the code for the rows, so it's row 63\n# flows[63,1]\n\n#give rail an index so we can reorder the SICs correctly\n#they're fine here. By the time we get to merge, they're not\n#http://www.r-statistics.com/2012/01/merging-two-data-frame-objects-while-preserving-the-rows-order/\n\n# sectors = c(\"water\",\"sewage\",\"waste\",\"remediation\")\n# sectors = c(\"water\",\"sewage\")\nsectors = c(\"water\")\n\n\nwater <- percProcess(flows, 54,\"water\")\nwater$index <- seq(1:sn)\n\n#How much water do sectors consume?\n# sewage <- percProcess(flows, 55,\"sewage\")\n#waste <- percProcess(flows, 56,\"waste\")\n#remed <- percProcess(flows, 57,\"remediation\")\n\n#now combine in annoying way\n# all <- merge(water, sewage, by = \"SIC\")\n#all <- merge(all, waste, by = \"SIC\")\n#all <- merge(all, remed, by = \"SIC\")\n\nall <- water\n\n#correct row order...\nall <- all[order(all$index),]\n#correct factor order. Possibly\nall$SIC <- reorder(all$SIC, all$index)\n\n\n#add SIC short name labels\nall <- cbind(all, names)\n\n#hist(transPerc$percent, breaks=30)\n\n#keep heavy only\n#transPerc <- transPerc[1:58,]\n\n#Variable for distinguishing light from heavy\nall$heavy <- \"no\"\nall$heavy[1:58] <-\"yes\"\n\n#get a transport total per sector for subsetting later\n#http://stackoverflow.com/questions/9651202/sum-variables-within-r-dataframe\n# all$tots <- rowSums(subset(all, select=c(\"water\",\"sewage\",\"waste\",\"remediation\")))\nall$tots <- rowSums(subset(all, select=sectors))\n\nall$shortname <- reorder(all$shortname, -all$tots)\n\n#melt! \nmeltall <- melt(all, id.vars = c(\"SIC\",\"index\",\"shortname\", \"heavy\", \"tots\"), \n                measure.vars = sectors,\n                                 variable.name=\"sector\",\n                                 value.name=\"percent\")\n\n\n\nmeltall$shortname <- reorder(meltall$shortname, -meltall$percent)\n\n#subset some different graphs\n# transub <- meltrans[meltrans$tots < 1.5,]\n# transub <- meltrans[meltrans$tots < 5 & meltrans$tots > 1.5,]\nsub <- meltall[meltall$percent > 0.1,]\n# sub <- meltall\n\n#stacked bars\nprinty <- ggplot(sub, aes(x=shortname, y=percent, fill = sector)) +\n  #   scale_y_continuous(trans=log2_trans()) +  \n  #     scale_y_continuous(trans=log2_trans(), breaks=c(2,4,8,16,30,60,120,400,1500,4500,16000)) +  \n  #   coord_cartesian(xlim = c(0, 10)) +\n  ggtitle(\"per-sector water/waste buying\") +\n  theme(plot.title = element_text(lineheight=1.5, face=\"bold\")) +\n  xlab(\"\") +\n  # ylab(\"percent\") +\n  ylab(\"percent\") +\n   # theme(axis.text = element_text(angle = 90, hjust = 1, vjust = -1)) +\n  coord_flip() +\n  geom_bar(stat=\"identity\")#, colour=\"black\"\n#   geom_bar(stat=\"identity\", aes(fill=heavy), colour=\"white\")\n#   geom_bar()\n  \nprinty\n\n# ggsave(printy, file=\"waterabs.jpg\", width=7, height=8, dpi = 600)\nggsave(printy, file=\"water.jpg\", width=7, height=8, dpi = 600)\n\n",
    "created" : 1436274033184.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1988692476",
    "id" : "64C4FE80",
    "lastKnownWriteTime" : 1436277701,
    "path" : "C:/Users/geodo/Dropbox/R/Workspace/SupplyUseMatrix/waterCostsFromDomesticUseIO2010.R",
    "project_path" : "waterCostsFromDomesticUseIO2010.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}